const Markup = require('telegraf/markup');

const inInline = (array, size = 3, column = false) => {
  const key = array.map((el) => {
    if (typeof(el) === 'string') {
      return Markup.callbackButton(el, el)
    } else {
      return Markup.callbackButton(el.title, el.value)
    }
  })
  const res = []; //–º–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
  if (column) {
    let length = key.length;
    let start = 0;
    for (let i = 0; i < size; i++){
      res[i] = key.slice(start, start + Math.ceil(length/size));
      start += Math.ceil(length/size);
      length -= Math.ceil(length/size);
    }
  } else {
    for (let i = 0; i < Math.ceil(key.length/size); i++){
      res[i] = key.slice((i*size), (i*size) + size);
    }
  }
  return Markup.inlineKeyboard([...res]).extra();
};

const backToKey = [ 'üîô–ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º' ];
const unSubscribeKey = [ '‚úñ–û—Ç–ø–∏—Å–∞—Ç—å—Å—è', 'üîô–ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º' ];
const subscribeKey = [ '‚úî–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', 'üîô–ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º' ];
const dateKey = [ '–í—á–µ—Ä–∞', '–°–µ–≥–æ–¥–Ω—è', '–ó–∞–≤—Ç—Ä–∞' ];
const viewSubscribeKey = [ '–¢—É—Ä–Ω–∏—Ä—ã', '–ö–ª—É–±—ã', 'üîô–ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º' ];
const countryKey = [
  { title: 'üá∑üá∫', value: 31 },
  { title: 'üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø', value: 52 },
  { title: 'üá™üá∏', value: 49 },
  { title: 'üáÆüáπ', value: 48 },
  { title: 'üá©üá™', value: 50 },
  { title: 'üá´üá∑', value: 51 },
];
const statViewKey = [
  { title: '–¢–∞–±–ª–∏—Ü–∞', value: 'tournament_table' },
  { title: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã', value: 'last_matches' },
  { title: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å', value: 'future_matches' },
];
const timeZoneKey = ['-12','-11','-10','-9','-8','-7','-6','-5','-4','-3','-2','-1','0','+1','+2','+3','+4','+5','+6','+7','+8','+9','+10','+11']
const settingsKey = ['–ü–æ–¥–ø–∏—Å–∫–∏', '–†–∞—Å—Å—ã–ª–∫–∏', '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è', '–û –±–æ—Ç–µ'];

const dateKBInline = inInline(dateKey);
const countryKBInline = inInline(countryKey, 6);
const statViewKBInline = inInline(statViewKey);
const unSubscribeKBInline = inInline(unSubscribeKey, 1);
const subscribeKBInline = inInline(subscribeKey, 1);
const timeZoneKBInline = inInline(timeZoneKey, 6);
const settingsKBInline = inInline(settingsKey, 3, true);
const viewSubscribeKBInline = inInline(viewSubscribeKey, 2);
const backToKBInline = inInline(backToKey, 1);
const deleteKBInline = inInline(['‚ùå –£–¥–∞–ª–∏—Ç—å'], 1);

const mainKeyboard = Markup.keyboard([[{text: '–ú–∞—Ç—á-—Ü–µ–Ω—Ç—Ä'}, {text: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'}], [{text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏'}]]).resize().extra();

// Exports
module.exports = {
  inInline,
  countryKey,
  statViewKey,
  timeZoneKey,
  dateKBInline,
  countryKBInline,
  statViewKBInline,
  unSubscribeKBInline,
  subscribeKBInline,
  timeZoneKBInline,
  settingsKBInline,
  viewSubscribeKBInline,
  backToKBInline,
  mainKeyboard,
  deleteKBInline,
}