const {
  unSubscribeKBInline,
  subscribeKBInline,
  viewSubscribeKBInline,
  backToKBInline,
} = require('../helpers/keyboards');

const { showSettings } = require('../helpers/backToSettings');

function setupSettings(bot) {
  bot.hears('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', (ctx) => showSettings(ctx));
  bot.hears('Settings', (ctx) => showSettings(ctx));
  bot.action('–†–∞—Å—Å—ã–ª–∫–∏', (ctx) => subscribesList(ctx));
  bot.action('Mailings', (ctx) => subscribesList(ctx));
  bot.action('–ü–æ–¥–ø–∏—Å–∫–∏', (ctx) => selectSubcribeView(ctx));
  bot.action('Subscriptions', (ctx) => selectSubcribeView(ctx));
  bot.action('üîô–ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º', (ctx) => showSettings(ctx, true));
  bot.action('üîôBack to settings', (ctx) => showSettings(ctx, true));
  bot.action('‚ùå –£–¥–∞–ª–∏—Ç—å', (ctx) => deleteMess(ctx));
  bot.action('‚ùå Delete', (ctx) => deleteMess(ctx));
  bot.action('–û –±–æ—Ç–µ', (ctx) => about(ctx));
  bot.action('About the bot', (ctx) => about(ctx));
}

function selectSubcribeView(ctx) {
  const options = viewSubscribeKBInline;
  const info = ctx.i18n.t('titleSubscriptions');
  ctx.editMessageText(info, options);
}

function deleteMess(ctx) {
  ctx.deleteMessage();
}

function subscribesList(ctx) {
  const user = ctx.session.user;
  const info = (user && user.onScheduler)
                ? '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏?'
                : '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –±–æ—Ç –±—É–¥–µ—Ç –≤–∞–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—É—à —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –º–∞—Ç—á–µ–π.';
  const options = (user && user.onScheduler) ? unSubscribeKBInline : subscribeKBInline;
  ctx.editMessageText(info, options);
}

function about(ctx) {
  const options = backToKBInline;
  options.parse_mode = 'HTML';
  options.disable_web_page_preview = true;
  ctx.editMessageText(ctx.i18n.t('aboutTheBot'), options);
}

// Exports
module.exports = {
  setupSettings,
}